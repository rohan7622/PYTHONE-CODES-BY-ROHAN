{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Function in Python\n","\n","Function ek block hota hai code ka, jo specific task perform karta hai. Jab hume apne code ko reusable banana hota hai, toh hum function ka use karte hain.\n","\n","Functions do tarike ke hote hain:\n","\n","* Built-in Functions (jo Python already provide karta hai jaise print(), len(), etc.)\n","* User-defined Functions (jo hum apni zarurat ke hisaab se banate hain)"],"metadata":{"id":"oFNFWZs-g97N"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"J1scX53zg7NQ"},"outputs":[],"source":["# Syntax of Function\n","def function_name(parameters):\n","    \"\"\"docstring (optional)\"\"\"\n","    # Function body\n","    return value (optional)"]},{"cell_type":"markdown","source":["**def** ***keyword*** ka matlab hai ki hum ek function define kar rahe hain. Function ka naam hamesha meaningful hona chahiye taaki pata chale ki ye function kya karta hai. ***Parameters*** woh values hoti hain jo function ke andar pass ki jaati hain (ye optional hote hain). Jab function apna kaam khatam karta hai, toh woh koi value ***return*** kar sakta hai."],"metadata":{"id":"FYp_Cdj9hSWQ"}},{"cell_type":"markdown","source":["##Example 1 : Basic Function"],"metadata":{"id":"4cGj2MIpiJBm"}},{"cell_type":"code","source":["# Basic Function\n","def greet():\n","    print(\"Hello! Welcome to Python.\")"],"metadata":{"id":"d8ZzD4Sbhint"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Yeh ek simple function hai jiska naam **greet()** hai. Isme koi parameter nahi diya gaya hai. Jab bhi hum is function ko call karenge, yeh sirf ek message print karega.\n","\n"],"metadata":{"id":"oFZu7LVqhvq4"}},{"cell_type":"code","source":["greet()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WGvfKIvlhrg7","executionInfo":{"status":"ok","timestamp":1726686436110,"user_tz":-330,"elapsed":443,"user":{"displayName":"Pankaj Bagul","userId":"06438863194030985504"}},"outputId":"d4027ac7-8b3b-47e4-e5d1-d5739e188e77"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello! Welcome to Python.\n"]}]},{"cell_type":"markdown","source":["## Example 2: Function with Parameters"],"metadata":{"id":"-Dq3E5SjiNPE"}},{"cell_type":"code","source":["def greet_user(name):\n","    print(f\"Hello, {name}! Welcome to Python.\")"],"metadata":{"id":"wB-vK-dAiM_w"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Yahan pe humne ek parameter **name** diya hai, jo user ka naam accept karega. Jab hum is function ko call karenge, toh hume usme **name** pass karna padega."],"metadata":{"id":"uo7rJ88SibZO"}},{"cell_type":"code","source":["greet_user(\"John\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QpGtPa41iEd3","executionInfo":{"status":"ok","timestamp":1726686584439,"user_tz":-330,"elapsed":686,"user":{"displayName":"Pankaj Bagul","userId":"06438863194030985504"}},"outputId":"eef71994-8838-4e14-fa13-0aa4cf2cbd49"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello, John! Welcome to Python.\n"]}]},{"cell_type":"markdown","source":["**greet_user()** function ek argument **name** leta hai aur usko greeting message ke sath print karta hai. Is tarah ka function useful hota hai jab hume dynamic input lena hota hai."],"metadata":{"id":"fDbW-K4BiqGN"}},{"cell_type":"markdown","source":["## Example 3: Function with Return Value"],"metadata":{"id":"VK3teRTbixs6"}},{"cell_type":"code","source":["def add_numbers(a, b):\n","    return a + b"],"metadata":{"id":"NfwIT6xii2EV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Yeh function **a** aur **b** ko input mein leta hai, aur dono numbers ka sum return karta hai."],"metadata":{"id":"MSQi-XzCi46F"}},{"cell_type":"code","source":["result = add_numbers(10, 5)\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cuHqgqAVi_2j","executionInfo":{"status":"ok","timestamp":1726686694764,"user_tz":-330,"elapsed":514,"user":{"displayName":"Pankaj Bagul","userId":"06438863194030985504"}},"outputId":"d68cc0f9-c91d-4624-aa87-f5eb9737e284"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["15\n"]}]},{"cell_type":"markdown","source":["**add_numbers()** function 2 numbers ko input leta hai aur unka sum calculate karke return karta hai. Jab humne function ko call kiya, toh usne result return kiya, jo humne **result** variable mein store kiya aur print kiya."],"metadata":{"id":"52GlGUm6jDTu"}},{"cell_type":"markdown","source":["## **Important Points to Note:**\n","\n","1. **Function Naming:** Function ka naam meaningful hona chahiye taaki pata chale function kya kaam karega.\n","    \n","2. **Parameters and Arguments:** Parameters woh values hain jo function define karte waqt dete hain, aur arguments woh values hain jo function call karte waqt pass ki jaati hain.\n","\n","3. **Return Statement:** Function return statement se value wapas de sakta hai. Agar koi value return nahi karta, toh Python **None** return karta hai by default."],"metadata":{"id":"3wSX9Fo-jRxe"}},{"cell_type":"markdown","source":["###Example 4: Function with Multiple Parameters and Default Value\n","kabhi-kabhi hum function ko kuch default values bhi de sakte hain. Agar user ne koi argument pass nahi kiya, toh default value use ki jaayegi."],"metadata":{"id":"wW6xmRQBkFYr"}},{"cell_type":"code","source":["def greet_user(name=\"Guest\"):\n","    print(f\"Hello, {name}! Welcome to Python.\")"],"metadata":{"id":"3cI4DLRqkDA8"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Yahan pe **name** ka default value **\"Guest\"** hai."],"metadata":{"id":"lxZn-AawkQQe"}},{"cell_type":"code","source":["greet_user()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aizAOcxzkVlU","executionInfo":{"status":"ok","timestamp":1726687044810,"user_tz":-330,"elapsed":686,"user":{"displayName":"Pankaj Bagul","userId":"06438863194030985504"}},"outputId":"bce7cccf-fda0-4a95-f4e4-8ff1da087d73"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello, Guest! Welcome to Python.\n"]}]},{"cell_type":"markdown","source":["Agar hum koi naam pass karenge, toh woh us naam ko use karega:"],"metadata":{"id":"LbjTfjXSkbc-"}},{"cell_type":"code","source":["greet_user(\"John\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"olCqTg6lkep3","executionInfo":{"status":"ok","timestamp":1726687086491,"user_tz":-330,"elapsed":663,"user":{"displayName":"Pankaj Bagul","userId":"06438863194030985504"}},"outputId":"f1071747-c413-4a21-adb5-d14cdf820987"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Hello, John! Welcome to Python.\n"]}]},{"cell_type":"markdown","source":["## **Advance Functions in Python**"],"metadata":{"id":"zeIaVN6fksPN"}},{"cell_type":"markdown","source":["####1. **Function with Multiple Return Values**\n","\n","Python mein ek function multiple values return kar sakta hai."],"metadata":{"id":"NOEtx2a9k05I"}},{"cell_type":"code","source":["# Calculating Area and Perimeter\n","def calculate_area_perimeter(length, width):\n","    area = length * width\n","    return area, 2 * (length + width)"],"metadata":{"id":"oZgPjGZrlFN4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Yeh function **length** aur **width** ke basis pe rectangle ka area aur perimeter calculate karta hai aur dono values ko return karta hai."],"metadata":{"id":"O2y38DHrlKLm"}},{"cell_type":"code","source":["area, perimeter = calculate_area_perimeter(10, 5)\n","print(f\"Area: {area}\")\n","print(f\"Perimeter: {perimeter}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MLntRiK1lPj6","executionInfo":{"status":"ok","timestamp":1726687309859,"user_tz":-330,"elapsed":460,"user":{"displayName":"Pankaj Bagul","userId":"06438863194030985504"}},"outputId":"0374d00c-fb88-4888-c6a4-99e8df2b0bfc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Area: 50\n","Perimeter: 30\n"]}]},{"cell_type":"markdown","source":["2. #### **Recursive Functions**\n","\n","Recursion tab hota hai jab ek function apne aapko call karta hai. Yeh useful hota hai jab hume repetitive tasks perform karne hote hain."],"metadata":{"id":"rafmqDMslgYt"}},{"cell_type":"code","source":["# Example: Factorial Calculation\n","def factorial(n):\n","    if n == 1:\n","        return 1\n","    else:\n","        return n * factorial(n - 1)"],"metadata":{"id":"LhVgQ_omloYc"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Yeh function **n** ka factorial calculate karta hai using recursion."],"metadata":{"id":"kwIHHqbblydq"}},{"cell_type":"code","source":["print(factorial(4))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"twtkAZZJl4aN","executionInfo":{"status":"ok","timestamp":1726687524248,"user_tz":-330,"elapsed":517,"user":{"displayName":"Pankaj Bagul","userId":"06438863194030985504"}},"outputId":"0fa72b32-d9ac-479c-daa0-37c690e33151"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["24\n"]}]},{"cell_type":"markdown","source":["3. #### **Lambda (Anonymous) Functions**\n","Lambda functions ek one-liner anonymous function hote hain jo complex code likhne se bachate hain."],"metadata":{"id":"J4lQHMZWmSMh"}},{"cell_type":"code","source":["# Example: Doubling a Number\n","double = lambda x: x * 2\n","print(double(5))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cONmbmohmQwM","executionInfo":{"status":"ok","timestamp":1726687617535,"user_tz":-330,"elapsed":634,"user":{"displayName":"Pankaj Bagul","userId":"06438863194030985504"}},"outputId":"d18a7309-9567-4f49-d0ea-31508e271ad1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["10\n"]}]},{"cell_type":"markdown","source":["#### Sorting List of Tuples by Second Element"],"metadata":{"id":"fMCbovzPmnHb"}},{"cell_type":"code","source":["students = [(\"john\", 85), (\"Ravi\", 90), (\"Amit\", 80)]\n","sorted_students = sorted(students, key=lambda x: x[1])\n","print(sorted_students)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WusxdIXEmlJl","executionInfo":{"status":"ok","timestamp":1726687667148,"user_tz":-330,"elapsed":3,"user":{"displayName":"Pankaj Bagul","userId":"06438863194030985504"}},"outputId":"1347a48f-8fc2-42ad-b49e-2b1fed679f25"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[('Amit', 80), ('john', 85), ('Ravi', 90)]\n"]}]},{"cell_type":"code","source":["students = [(\"john\",85)]"],"metadata":{"id":"BeLZ5Pc6J3Py"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["**4. Higher-Order Functions**\n","\n","A higher-order function woh function hota hai jo doosre functions ko as an argument leta hai ya ek function return karta hai."],"metadata":{"id":"G0oadm6sm70j"}},{"cell_type":"code","source":["#Using map() to Square Numbers\n","def square(x):\n","    return x * x\n","\n","numbers = [1, 2, 3, 4, 5]\n","squared_numbers = list(map(square, numbers))\n","print(squared_numbers)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oCrGVBHznO1H","executionInfo":{"status":"ok","timestamp":1726687819578,"user_tz":-330,"elapsed":431,"user":{"displayName":"Pankaj Bagul","userId":"06438863194030985504"}},"outputId":"864a1b08-2d9e-4b87-f121-49347f8930c6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1, 4, 9, 16, 25]\n"]}]},{"cell_type":"markdown","source":["Higher-order functions ka use **data processing** mein hota hai, jaise **map() ** function ko use karke kisi dataset pe operation perform karna."],"metadata":{"id":"dpd3fTf8nXh6"}},{"cell_type":"markdown","source":["#### **5. Closures**.\n","\n","Closure ek function hota hai jo apne surrounding variables ko \"yaad\" rakhta hai, even after outer function terminate ho jaaye."],"metadata":{"id":"b7DLikyOnnM5"}},{"cell_type":"code","source":["# Example: Bank Account System\n","def bank_account(initial_balance):\n","    balance = initial_balance\n","\n","    def deposit(amount):\n","        nonlocal balance\n","        balance += amount\n","        return balance\n","\n","    def withdraw(amount):\n","        nonlocal balance\n","        balance -= amount\n","        return balance\n","\n","    return deposit, withdraw"],"metadata":{"id":"Nct2dSopnk5L"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Yeh **bank_account** function ek initial balance set karta hai aur **deposit** aur withdraw functions ko return karta hai jo balance ko update karte hain."],"metadata":{"id":"uqmXDjjwoDEA"}},{"cell_type":"code","source":["deposit, withdraw = bank_account(1000)\n","print(deposit(500))  # 1500\n","print(withdraw(200))  # 1300"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wvtc6JRcoJ8_","executionInfo":{"status":"ok","timestamp":1726688048834,"user_tz":-330,"elapsed":508,"user":{"displayName":"Pankaj Bagul","userId":"06438863194030985504"}},"outputId":"3630d5f8-babd-4e00-e5db-3b6c615bf0e6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1500\n","1300\n"]}]},{"cell_type":"markdown","source":["#### **6. Decorators**\n","\n","Decorators Python ka ek powerful feature hain jo kisi function ke behavior ko modify karte hain bina us function ka code change kiye."],"metadata":{"id":"0U5IrmPRoUan"}},{"cell_type":"code","source":["#Logging Decorator\n","def log_decorator(func):\n","    def wrapper(*args, **kwargs):\n","        print(f\"Function `{func.__name__}` called with arguments: {args}, {kwargs}\")\n","        return func(*args, **kwargs)\n","    return wrapper\n","\n","@log_decorator # Yeh log_decorator har function call ko log karta hai.\n","def multiply(a, b):\n","    return a * b"],"metadata":{"id":"sLK-kaTfoSsc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(multiply(10, 5))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"25MazHPCoaqw","executionInfo":{"status":"ok","timestamp":1726688153999,"user_tz":-330,"elapsed":586,"user":{"displayName":"Pankaj Bagul","userId":"06438863194030985504"}},"outputId":"cd5ba2fd-c438-4484-839d-6c0a9d2fc598"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Function `multiply` called with arguments: (10, 5), {}\n","50\n"]}]}]}